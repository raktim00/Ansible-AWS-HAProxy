- hosts: localhost
  gather_facts: no
  vars_files:
  - cred.yml

  tasks:
  - name:
    pip:
      name: boto3
      state: present

  - name: Creating Security Group for backend webserver on AWS
    ec2_group:
      name: WebSG
      description: Security Group for Web Server allowing port for http and ssh
      region: ap-south-1
      aws_access_key: "{{ access_key }}"
      aws_secret_key: "{{ secret_key }}"
      rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 80
        to_port: 80
        cidr_ip: 0.0.0.0/0
      rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0

  - name: launching ec2 instance for webserver
    ec2:
      key_name: webkey
      instance_type: t2.micro
      image: ami-0e306788ff2473ccb
      wait: true
      group: WebSG
      count: 2
      vpc_subnet_id: subnet-4602690a
      assign_public_ip: yes
      region: ap-south-1
      state: present
      aws_access_key: "{{ access_key }}"
      aws_secret_key: "{{ secret_key }}"
      instance_tags:
        Name: webserver
    register: backend

  - name: Add new instance to host group webserver
    add_host:
      hostname: "{{ item.public_ip }}"
      groupname: webserver
    loop: "{{ backend.instances }}"

  - name: Wait for SSH to come up
    wait_for:
      host: "{{ item.public_dns_name }}"
      port: 22
      state: started
    loop: "{{ backend.instances }}"

- hosts: webserver
  gather_facts: no
  tasks:
  - name: running role for webserver
    include_role:
      name: webserver

- hosts: localhost
  gather_facts: no
  vars_files:
  - cred.yml

  tasks:
  - name: Creating Security Group for frontend loadbalancer server on AWS
    ec2_group:
      name: LBSG
      description: Security Group for LB Server allowing port for http and ssh
      region: ap-south-1
      aws_access_key: "{{ access_key }}"
      aws_secret_key: "{{ secret_key }}"
      rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 8080
        to_port: 8080
        cidr_ip: 0.0.0.0/0
      rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0
        
  - name: launching ec2 instance for lbserver
    ec2:
      key_name: webkey
      instance_type: t2.micro
      image: ami-0e306788ff2473ccb
      wait: true
      group: LBSG
      count: 1
      vpc_subnet_id: subnet-6dfdc705
      assign_public_ip: yes
      region: ap-south-1
      state: present
      aws_access_key: "{{ access_key }}"
      aws_secret_key: "{{ secret_key }}"
      instance_tags:
        Name: lbserver
    register: frontend

  - name: Add new instance to host group lbserver
    add_host:
      hostname: "{{ item.public_ip }}"
      groupname: lbserver
    loop: "{{ frontend.instances }}"

  - name: Wait for SSH to come up
    wait_for:
      host: "{{ item.public_dns_name }}"
      port: 22
      state: started
    loop: "{{ frontend.instances }}"

- hosts: lbserver
  gather_facts: no
  tasks:
  - name: running role
    include_role:
      name: lbserver


